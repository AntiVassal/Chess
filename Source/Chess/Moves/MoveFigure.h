// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "UObject/NoExportTypes.h"
#include "../FigureInfo.h"
#include "MoveFigure.generated.h"

/**
 * Класс, общий для всех ходов.
 */
UCLASS()
class CHESS_API UMoveFigure : public UObject
{
	GENERATED_BODY()
public:
	/**
	 * Проверяет, соответствует ли текущий ход правилам игры, или нет.
	 * @return true Ход соответствует правилам.
	 * @return false Ход не соответствует правилам, либо выходит за границы игровой доски. Выполнение хода невозможно. 
	 */
	virtual bool IsValidMoving();
	/** Перемещает фигуру по игровой доске (или проводит симуляцию перемещения, если она включена) */
	virtual void Move();
	/**
	 * Откатывает игровую доску до того состояния, которое было ещё до начала хода.
	 * @waring Работает только при включённой симуляции. Если симуляция отключена, то ничего не делает.
	 */
	virtual void Rollback();
	/**
	 * Предсказывает положение фигуры на игровой доски, после того, как ход будет выполнен.
	 * @return Структура, описывающая положение фигуры, и количество выполненых ходов.
	 */
	virtual FFigureInfo GetFigureInfoAfterMoving() const;
	/**
	 * Получает реальное положение фигуры на игровой доски до выполнения хода
	 * @return Структура, описывающая положение фигуры, и количество выполненых ходов.
	 * @warning После выполнения хода, функция будет возвращать реальное положение фигуры, а не положение фигуры до выполнения хода.
	 */
	virtual FFigureInfo GetFigureInfoBeforeMoving() const;
	/**
	 * Получает фигуру, которая будет уничтожена во время выполнения хода
	 * @return Указатель на фигуру, которую нужно уничтожить.
	 */
	virtual class AFigure* GetDestroyFigure() const;
	/**
	 * Сообщает о том, что ход завершён, и противник может ходить (Если симуляция отключена, то вызывается после завершения анимации перемещения).
	 * @warning Вызывается при завершении анимации перемещения, и работает только при отключённой симуляции.
	 */
	virtual void FinishMove();
	/**
	 * Позволяет получить фигуру, которая будет перемещаться
	 * @return Указатель на фигуру.
	 */
	class AFigure* GetFigure() const;
	/**
	 * Сохраняет указатель на фигуру, которая будет перемещаться.
	 * @param Figure Указатель на фигуру
	 * @warning Метод вызывается только при регистрации хода, и вручную вызывать его ненужно
	 */
	void Initialzie(class AFigure* Figure);
private:
	/** Указатель на фигуру, которая будет перемещаться */
	class AFigure* FigureActor;
};
